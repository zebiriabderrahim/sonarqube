name: SonarQube Build and Analysis

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.12.1'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
          
      - name: Create gradle.properties
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.warning.mode=all" >> ~/.gradle/gradle.properties
          echo "sonar.es.bootstrap.checks.disable=true" >> ~/.gradle/gradle.properties
          
      - name: Update Gradle Wrapper
        run: ./gradlew wrapper --gradle-version 8.12.1
        
      - name: Build and Test
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=4"
        run: |
          ./gradlew clean build test \
            -Dsonar.es.bootstrap.checks.disable=true \
            -Dorg.gradle.warning.mode=all \
            --warning-mode all \
            --no-daemon \
            --parallel \
            --continue
            
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
            
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=sonarqube \
            -Dsonar.organization=sonarsource \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.java.binaries=build/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml \
            -Dsonar.es.bootstrap.checks.disable=true \
            -Dsonar.qualitygate.wait=true
            
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/build/reports/tests/
            **/build/test-results/
            
      - name: Upload Build Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: |
            **/build/reports/
            
      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "**/build/test-results/**/*.xml"
